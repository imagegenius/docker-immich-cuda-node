#!/usr/bin/with-contenv bash

mkdir -p /config/machine-learning

# apply early ml support
cp /defaults/main.py /app/immich/machine-learning/src/main.py
if [ ! -d /config/cuda-venv ]; then
    python3 -m venv /config/cuda-venv/
fi

# install/update pip packages to /config venv
source /config/cuda-venv/bin/activate

installed_packages=$(pip list --format=freeze)

update_needed=false

# go through each package
while IFS= read -r package; do

  package_name=$(echo "$package" | cut -d'=' -f1)
  package_version=$(echo "$package" | cut -d'=' -f2)

  latest_version=$(pip search "$package_name" | grep "^$package_name" | awk '{print $2}')
  if [[ "$latest_version" > "$package_version" ]]; then
    echo "Package $package_name is outdated. Installed version: $package_version, Latest version: $latest_version"
    update_needed=true
  fi
done <<< "$installed_packages"

# Check if any package needs an update
if $update_needed; then
    apt-get update
    apt-get install --no-install-recommends -y \
        g++ \
        python3-dev
    pip install ${PIP_FLAGS} --index-url https://download.pytorch.org/whl/cu117 \
        torch
    pip install ${PIP_FLAGS} \
        fastapi \
        insightface \
        onnxruntime-gpu \
        scikit-learn \
        scipy \
        sentence-transformers \
        transformers \
        uvicorn[standard]
    apt-get remove -y --purge \
        g++ \
        python3-dev && \
    apt-get autoremove -y --purge && \
    apt-get clean && \
    rm -rf \
        /tmp/* \
        /var/tmp/* \
        /var/lib/apt/lists/*
fi



echo "**** cleanup ****"
for cleanfiles in *.pyc *.pyo; do \
    find /usr/local/lib/python3.* /usr/lib/python3.* -name "${cleanfiles}" -delete; \
done

# download and install cudnn
if [ ! -f /config/lib/libcudnn8_8.5.0.96-1+cuda11.7_amd64.deb  ]; then
    rm -f /config/lib/libcudnn*.deb
    curl -o  \
        /config/lib/libcudnn8_8.5.0.96-1+cuda11.7_amd64.deb -L \
        https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/libcudnn8_8.5.0.96-1+cuda11.7_amd64.deb
fi
dpkg -i /config/lib/libcudnn8_8.5.0.96-1+cuda11.7_amd64.deb

# permissions
chown -R abc:abc \
    /config \
    /app
